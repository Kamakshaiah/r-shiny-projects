outliersInReg(rnorm(100), plot = FALSE)
outliersInReg(rnorm(100), type = "line")
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (!is.null(desc)){
print(summary(fit))
}
if(plot){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (lines){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), type = "line")
outliersInReg(rnorm(100), lines = TRUE)
outliersInReg(rnorm(100), plot = TRUE)
outliersInReg(rnorm(100), lines = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (!is.null(desc)){
print(summary(fit))
}
if(plot){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (plot & lines){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), lines = TRUE)
outliersInReg(rnorm(100), plot = TRUE, lines = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (!is.null(desc)){
print(summary(fit))
}
if(plot){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (plot | lines){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), plot = TRUE, lines = TRUE)
outliersInReg(rnorm(100), lines = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (!is.null(desc)){
print(summary(fit))
}
if(plot | !(lines)){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (plot & lines){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), lines = TRUE)
outliersInReg(rnorm(100), plot = TRUE, lines = TRUE)
outliersInReg(rnorm(100), plot = TRUE)
outliersInReg(rnorm(100), desc = FALSE, plot = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (!(desc)){
print(summary(fit))
}
if(plot | !(lines)){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (plot & lines){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), desc = FALSE, plot = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (plot == TRUE & lines = TRUE){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (plot == TRUE & lines == TRUE){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), desc = FALSE, plot = TRUE)
outliersInReg(rnorm(100), desc = FALSE, plot = TRUE, lines = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (plot == TRUE | lines == TRUE){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), desc = FALSE, plot = TRUE, lines = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE, lines = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
} else if (lines == TRUE){
plot(cd, type = "l"); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), desc = FALSE, plot = TRUE, lines = TRUE)
outliersInReg(rnorm(100), desc = FALSE, lines = TRUE)
outliersInReg(rnorm(100), desc = TRUE, lines = TRUE)
outliersInReg <- function(x, plot = TRUE, desc = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), desc = TRUE)
outliersInReg(rnorm(100), desc = FALSE)
outliersInReg(rnorm(100), desc = TRUE, plot = FALSE)
outliersInReg(rnorm(100), desc = TRUE, plot = FALSE)
outliersInReg(rnorm(100), desc = TRUE, plot = TRUE)
cd[cd > 4*mean(cd, na.rm = T)]
cd
outliersInReg <- function(x, plot = TRUE, desc = TRUE, out = TRUE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if (out == TRUE){
cd[cd > 4*mean(cd, na.rm = T)]
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), out = TRUE)
outliersInReg <- function(x, plot = FALSE, desc = FALSE, out = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if (out == TRUE){
cd[cd > 4*mean(cd, na.rm = T)]
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), out = TRUE)
outliersInReg(rnorm(100), plot = TRUE)
outliersInReg(rnorm(100), plot = TRUE)
outliersInReg(rnorm(100), desc = TRUE)
outliersInReg(rnorm(100), out = TRUE)
outliersInReg <- function(x, plot = FALSE, desc = FALSE, out = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if (out == TRUE){
print(cd[cd > 4*mean(cd, na.rm = T)])
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), out = TRUE)
outliersInReg(rnorm(100), out = TRUE, plot = TRUE)
outliersInReg(rnorm(100), out = TRUE, plot = TRUE, desc = TRUE)
outliersInReg(rnorm(100), out = TRUE, plot = TRUE)
outliersInReg <- function(x, plot = FALSE, desc = FALSE, out = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
if (desc==TRUE){
print(summary(fit))
}
if (out == TRUE){
print(cd[cd > 4*mean(cd, na.rm = T)])
}
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInReg(rnorm(100), out = TRUE, plot = TRUE)
outliersInReg(rnorm(100), desc = TRUE, plot = TRUE)
outliersInRegre <- function(x, plot = FALSE, desc = FALSE, out = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
return(list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)]))
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
outliersInRegre <- function(x, plot = FALSE, desc = FALSE, out = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
return(list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)]))
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInRegre <- function(x, plot = FALSE, desc = FALSE, out = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
return(list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)]))
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInRegre <- function(x, plot = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
return(list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)]))
if(plot==TRUE){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInRegre(rnorm(100))
out <- outliersInRegre(rnorm(100))
out$desc
outliersInRegre(rnorm(100))
outliersInRegre(rnorm(100), plot =TRUE)
outliersInRegre(rnorm(100), plot = TRUE)
outliersInRegre <- function(x, plot = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
return(list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)]))
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
outliersInRegre(rnorm(100))
outliersInRegre <- function(x, result = TRUE, plot = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
out <- list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)])
if (result){
print(out)
}
if (plot){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInRegre(rnorm(100))
outliersInRegre(rnorm(100), plot = TRUE)
outliersInRegre(rnorm(100), result = FALSE, plot = TRUE)
outliersInReg <- function(x, result = FALSE, plot = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
out <- list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)])
if (result){
return(out)
}
if (plot){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInRegre(rnorm(100), result = FALSE, plot = TRUE)
outliersInRegre(rnorm(100), result = TRUE)
out <- outliersInRegre(rnorm(100))
outliersInRegre(rnorm(100))
outliersInReg <- function(x, result = FALSE, plot = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
out <- list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)])
if (result){
print(out)
}
if (plot){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
outliersInRegre(rnorm(100))
outliersInRegre(rnorm(100), plot = TRUE)
outliersInReg(rnorm(100), plot = TRUE)
outliersInReg(rnorm(100), result = TRUE)
outliersInReg(rnorm(100))
outliersInReg(rnorm(100), plot = TRUE)
outliersInReg(rnorm(100), result = TRUE)
out <- outliersInReg(rnorm(100), result = TRUE)
outliersInReg <- function(x, result = FALSE, plot = FALSE){
fit <- lm(x ~ ., data = as.data.frame(x))
cd <- cooks.distance(fit)
out <- list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)])
if (result){
return(list(desc = summary(fit), outliers = cd[cd > 4*mean(cd, na.rm = T)]))
}
if (plot){
plot(cd); abline(h = 4*mean(cd, na.rm = T), col ="red"); text(x = 1:length(cd)+1, y = cd, labels = ifelse(cd > 4*mean(cd, na.rm = T), names(cd), ""), col = "red")
}
}
out <- outliersInReg(rnorm(100), result = TRUE)
out$desc
out$outliers
outliersInReg(rnorm(100), result = TRUE, plot = TRUE)
outliersInReg(rnorm(100), plot = TRUE)
out <_ outliersInReg(rnorm(100), plot = TRUE)
out <- outliersInReg(rnorm(100), plot = TRUE)
out <- outliersInReg(rnorm(100), result = TRUE)
out$desc
out <- outliersInReg(rnorm(100))
rm(out)
out <- outliersInReg(rnorm(100))
out <- outliersInReg(rnorm(100), result = TRUE)
x <- rnorm(30)
y <- rnorm(30)
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
newdat <- as.data.frame(seq(mix(x), max(x), by = 0.05))
newdat <- as.data.frame(seq(min(x), max(x), by = 0.05))
conf_int <- predict(fit, newdat, interval = "confidence", level = 0.95)
newdat <- as.data.frame(seq(min(x), max(x), length.out = 30))
conf_int <- predict(fit, newdat, interval = "confidence", level = 0.95)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="lightblue")
abline(fit, col="lightred")
abline(fit, col="pink")
matlines(newdat, conf_interval[,2:3], col = "blue", lty=2)
matlines(newdat, conf_int[,2:3], col = "blue", lty=2)
abline(fit, col="blue")
matlines(newdat, conf_int[,2:3], col = "pink", lty=2)
regOutliers <- function(x, y, newdf, ci = 0.95){
if (is.null(x) & is.null(y)){
x <- rnorm(30)
y <- rnorm(30)
}
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
if(is.null(newdf)){
newdat <- as.data.frame(seq(min(x), max(x), length.out = 30))
}
conf_int <- predict(fit, newdat, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="blue")
matlines(newdat, conf_int[,2:3], col = "pink", lty=2)
}
regOutliers()
regOutliers <- function(x, y, newdf, ci = 0.95){
if (is.null(x) | is.null(y)){
x <- rnorm(30)
y <- rnorm(30)
}
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
if(is.null(newdf)){
newdat <- as.data.frame(seq(min(x), max(x), length.out = 30))
}
conf_int <- predict(fit, newdat, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="blue")
matlines(newdat, conf_int[,2:3], col = "pink", lty=2)
}
regOutliers()
regOutliers <- function(x, y, newdf, ci = 0.95){
if (!is.null(x) & !is.null(y)){
x <- x
y <- y
} else {
x <- rnorm(30)
y <- rnorm(30)
}
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
if(is.null(newdf)){
newdat <- as.data.frame(seq(min(x), max(x), length.out = 30))
}
conf_int <- predict(fit, newdat, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="blue")
matlines(newdat, conf_int[,2:3], col = "pink", lty=2)
}
regOutliers()
regOutliers <- function(x = rnorm(30), y= rnorm(30), newdf, ci = 0.95){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
if(is.null(newdf)){
newdat <- as.data.frame(seq(min(x), max(x), length.out = 30))
}
conf_int <- predict(fit, newdat, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="blue")
matlines(newdat, conf_int[,2:3], col = "pink", lty=2)
}
regOutliers()
regOutliers <- function(x = rnorm(30), y= rnorm(30), newdf=as.data.frame(seq(min(x), max(x), length.out = 30)), ci = 0.95){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdat, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="blue")
matlines(newdat, conf_int[,2:3], col = "pink", lty=2)
}
regOutliers()
regOutliers <- function(x = rnorm(30), y= rnorm(30), newdf=as.data.frame(seq(min(x), max(x), length.out = 30)), ci = 0.95){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdat, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="red")
matlines(newdat, conf_int[,2:3], col = "blue", lty=2)
}
regOutliers()
regOutliers(x = rnorm(100), y = rnorm(100), newdf = as.data.frame(seq(min(x), max(x), length.out = 100)))
regOutliers(x = rnorm(100), y = rnorm(100), newdf = as.data.frame(seq(min(x), max(x), length.out = 100)))
newdf=as.data.frame(seq(min(x), max(x), length.out = 100)
)
newdf=as.data.frame(seq(min(x), max(x), length.out = 100)
regOutliers(x = rnorm(100), y = rnorm(100), newdf = newdf)
regOutliers()
x <- rnorm(100)
y <- rnorm(100)
newdf=as.data.frame(seq(min(x), max(x), length.out = 100))
regOutliers(x, y, newdf)
regOutliers <- function(x = rnorm(30), y= rnorm(30), newdf=as.data.frame(seq(min(x), max(x), length.out = 30)), ci = 0.95){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdat, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="red")
matlines(newdf, conf_int[,2:3], col = "blue", lty=2)
}
regOutliers(x, y, newdf)
regOutliers <- function(x = rnorm(30), y= rnorm(30), newdf=as.data.frame(seq(min(x), max(x), length.out = 30)), ci = 0.95){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdf, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression")
abline(fit, col="red")
matlines(newdf, conf_int[,2:3], col = "blue", lty=2)
}
regOutliers(x, y, newdf)
regOutliers(x, y, newdf)
regOutliers(x, y, newdf, 0.99)
regOutliers(x, y, newdf, 0.999)
regOutliers(rnorm(100), rnorm(100), newdf, 0.999)
regOutliers <- function(x = rnorm(30), y= rnorm(30), newdf=as.data.frame(seq(min(x), max(x), length.out = 30)), ci = 0.95){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdf, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression"); text(row.names(cbind.data.frame(x, y)))
abline(fit, col="red")
matlines(newdf, conf_int[,2:3], col = "blue", lty=2)
}
regOutliers(rnorm(100), rnorm(100), newdf, 0.999)
x
y
cbind.data.frame(x, y)
df <- cbind.data.frame(x, y)
names(df)
row.names(df)
plot(x, y); text(row.name(cbind.data.frame(x, y)))
plot(x, y); text(row.names(cbind.data.frame(x, y)))
plot(x, y); text(1:length(x)+1, y, row.names(cbind.data.frame(x, y)))
plot(x, y); text(1:length(x)+1, 1:length(y), row.names(cbind.data.frame(x, y)))
plot(x, y); text(x, y, row.names(cbind.data.frame(x, y)))
plot(x, y); text(x, y, row.names(cbind.data.frame(x, y)), cex = 0.7)
plot(x, y); text(x, y, row.names(cbind.data.frame(x, y)), cex = 0.25)
plot(x, y); text(x, y, row.names(cbind.data.frame(x, y)), cex = 0.5)
plot(x, y); text(x+0.001, y, row.names(cbind.data.frame(x, y)), cex = 0.5)
plot(x, y); text(x+0.001, y, row.names(cbind.data.frame(x, y)), cex = 0.5)
plot(x, y); text(x, y, row.names(cbind.data.frame(x, y)), cex = 0.5)
plot(x, y); text(x+1, y, row.names(cbind.data.frame(x, y)), cex = 0.5)
plot(x, y); text(x+0.1, y, row.names(cbind.data.frame(x, y)), cex = 0.5)
plot(x, y); text(x+0.2, y, row.names(cbind.data.frame(x, y)), cex = 0.5)
plot(x, y); text(x+0.2, y, row.names(cbind.data.frame(x, y)), cex = 0.5, col = "red")
regOutliers <- function(x = rnorm(30), y= rnorm(30), newdf=as.data.frame(seq(min(x), max(x), length.out = 30)), ci = 0.95){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdf, interval = "confidence", level = ci)
plot(x, y, xlab="x", ylab="y", main="Regression"); text(x+0.2, y, row.names(cbind.data.frame(x, y)), cex = 0.5, col = "red")
abline(fit, col="red")
matlines(newdf, conf_int[,2:3], col = "blue", lty=2)
}
regOutliers(rnorm(100), rnorm(100), newdf, 0.999)
regOutliers <- function(x = rnorm(100), y= rnorm(100), newdf=as.data.frame(seq(min(x), max(x), length.out = 100)), ci = 0.999, plot = FALSE, out = FALSE){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdf, interval = "confidence", level = ci)
if(plot){
plot(x, y, xlab="x", ylab="y", main="Regression"); text(x+0.2, y, row.names(cbind.data.frame(x, y)), cex = 0.5, col = "red")
abline(fit, col="red")
matlines(newdf, conf_int[,2:3], col = "blue", lty=2)
}
if(out){
print(conf_int)
}
}
regOutliers(rnorm(100), rnorm(100), newdf, 0.999, out = TRUE)
regOutliers <- function(x = rnorm(100), y= rnorm(100), newdf=as.data.frame(seq(min(x), max(x), length.out = 100)), ci = 0.999, plot = FALSE, out = FALSE){
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
conf_int <- predict(fit, newdf, interval = "confidence", level = ci)
if(plot){
plot(x, y, xlab="x", ylab="y", main="Regression"); text(x+0.2, y, row.names(cbind.data.frame(x, y)), cex = 0.5, col = "red")
abline(fit, col="red")
matlines(newdf, conf_int[,2:3], col = "blue", lty=2)
}
if(out){
return(conf_int)
}
}
out <- regOutliers(rnorm(100), rnorm(100), newdf, 0.999, out = TRUE)
head(out)
